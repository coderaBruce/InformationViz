<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20194.20.0119.2058                               -->
<workbook original-version='18.1' source-build='2019.4.2 (20194.20.0119.2058)' source-platform='mac' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <SheetIdentifierTracking ignorable='true' predowngraded='true' />
    <SortTagCleanup />
    <WindowsPersistSimpleIdentifiers />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource caption='a1-cereals' inline='true' name='federated.19r374z0xy5afz10nl73q0ceajzh' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='a1-cereals' name='textscan.1g2ydio1gax83p19irr410wac70q'>
            <connection class='textscan' directory='/Users/xinyuli/Documents/courses/kent_2020_spring/homework#1/Data' filename='a1-cereals.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <relation connection='textscan.1g2ydio1gax83p19irr410wac70q' name='a1-cereals.csv' table='[a1-cereals#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='string' name='Cereal' ordinal='0' />
            <column datatype='string' name='Manufacturer' ordinal='1' />
            <column datatype='string' name='Type' ordinal='2' />
            <column datatype='integer' name='Calories' ordinal='3' />
            <column datatype='integer' name='Protein' ordinal='4' />
            <column datatype='integer' name='Fat' ordinal='5' />
            <column datatype='integer' name='Sodium' ordinal='6' />
            <column datatype='real' name='Fiber' ordinal='7' />
            <column datatype='real' name='Carbohydrates' ordinal='8' />
            <column datatype='integer' name='Sugars' ordinal='9' />
            <column datatype='integer' name='Shelf' ordinal='10' />
            <column datatype='integer' name='Potassium' ordinal='11' />
            <column datatype='integer' name='Vitamins' ordinal='12' />
            <column datatype='real' name='Weight' ordinal='13' />
            <column datatype='real' name='Cups' ordinal='14' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[a1-cereals.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Cereal</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Cereal]</local-name>
            <parent-name>[a1-cereals.csv]</parent-name>
            <remote-alias>Cereal</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Manufacturer</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Manufacturer]</local-name>
            <parent-name>[a1-cereals.csv]</parent-name>
            <remote-alias>Manufacturer</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Type</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Type]</local-name>
            <parent-name>[a1-cereals.csv]</parent-name>
            <remote-alias>Type</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Calories</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Calories]</local-name>
            <parent-name>[a1-cereals.csv]</parent-name>
            <remote-alias>Calories</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Protein</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Protein]</local-name>
            <parent-name>[a1-cereals.csv]</parent-name>
            <remote-alias>Protein</remote-alias>
            <ordinal>4</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Fat</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Fat]</local-name>
            <parent-name>[a1-cereals.csv]</parent-name>
            <remote-alias>Fat</remote-alias>
            <ordinal>5</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Sodium</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Sodium]</local-name>
            <parent-name>[a1-cereals.csv]</parent-name>
            <remote-alias>Sodium</remote-alias>
            <ordinal>6</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Fiber</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Fiber]</local-name>
            <parent-name>[a1-cereals.csv]</parent-name>
            <remote-alias>Fiber</remote-alias>
            <ordinal>7</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Carbohydrates</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Carbohydrates]</local-name>
            <parent-name>[a1-cereals.csv]</parent-name>
            <remote-alias>Carbohydrates</remote-alias>
            <ordinal>8</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Sugars</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Sugars]</local-name>
            <parent-name>[a1-cereals.csv]</parent-name>
            <remote-alias>Sugars</remote-alias>
            <ordinal>9</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Shelf</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Shelf]</local-name>
            <parent-name>[a1-cereals.csv]</parent-name>
            <remote-alias>Shelf</remote-alias>
            <ordinal>10</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Potassium</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Potassium]</local-name>
            <parent-name>[a1-cereals.csv]</parent-name>
            <remote-alias>Potassium</remote-alias>
            <ordinal>11</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Vitamins</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Vitamins]</local-name>
            <parent-name>[a1-cereals.csv]</parent-name>
            <remote-alias>Vitamins</remote-alias>
            <ordinal>12</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Weight</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Weight]</local-name>
            <parent-name>[a1-cereals.csv]</parent-name>
            <remote-alias>Weight</remote-alias>
            <ordinal>13</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Cups</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Cups]</local-name>
            <parent-name>[a1-cereals.csv]</parent-name>
            <remote-alias>Cups</remote-alias>
            <ordinal>14</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Type_toNumber' datatype='integer' name='[Calculation_6024479311527034880]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='CASE [Type]&#10;    WHEN &apos;C&apos; THEN 75 &#10;    WHEN &apos;H&apos; THEN 25&#10;END' />
      </column>
      <column caption='calories_new' datatype='real' name='[Calculation_6024479311559004161]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='(SUM([Calories])-WINDOW_MIN(SUM([Calories])))&#10;/&#10;(WINDOW_MAX(SUM([Calories]))-WINDOW_MIN(SUM([Calories])))'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='protein_new' datatype='real' name='[Calculation_6024479311559880706]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='(SUM([Protein])-WINDOW_MIN(SUM([Protein])))&#10;/&#10;(WINDOW_MAX(SUM([Protein]))-WINDOW_MIN(SUM([Protein])))'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column caption='sodium_new' datatype='real' name='[calculated_carbohydrates (copy)_6024479311606444036]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='(SUM([Sodium])-WINDOW_MIN(SUM([Sodium])))&#10;/&#10;(WINDOW_MAX(SUM([Sodium]))-WINDOW_MIN(SUM([Sodium])))'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='sugar_new' datatype='real' name='[calculated_carbohydrates (copy)_6024479311609675781]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='(SUM([Sugars])-WINDOW_MIN(SUM([Sugars])))&#10;/&#10;(WINDOW_MAX(SUM([Sugars]))-WINDOW_MIN(SUM([Sugars])))'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='fat_new' datatype='real' name='[calculated_sugar (copy)_6024479311610265607]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='(SUM([Fat])-WINDOW_MIN(SUM([Fat])))&#10;/&#10;(WINDOW_MAX(SUM([Fat]))-WINDOW_MIN(SUM([Fat])))'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='carbs_new ' datatype='real' name='[calories_new (copy)_6024479311612362760]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='(SUM([Carbohydrates])-WINDOW_MIN(SUM([Carbohydrates])))&#10;/&#10;(WINDOW_MAX(SUM([Carbohydrates]))-WINDOW_MIN(SUM([Carbohydrates])))'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <layout dim-ordering='alphabetic' dim-percentage='0.288416' measure-ordering='alphabetic' measure-percentage='0.711584' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
    </datasource>
  </datasources>
  <worksheets>
    <worksheet name='Sheet 1'>
      <table>
        <view>
          <datasources>
            <datasource caption='a1-cereals' name='federated.19r374z0xy5afz10nl73q0ceajzh' />
          </datasources>
          <datasource-dependencies datasource='federated.19r374z0xy5afz10nl73q0ceajzh'>
            <column caption='calories_new' datatype='real' name='[Calculation_6024479311559004161]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='(SUM([Calories])-WINDOW_MIN(SUM([Calories])))&#10;/&#10;(WINDOW_MAX(SUM([Calories]))-WINDOW_MIN(SUM([Calories])))'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='protein_new' datatype='real' name='[Calculation_6024479311559880706]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='(SUM([Protein])-WINDOW_MIN(SUM([Protein])))&#10;/&#10;(WINDOW_MAX(SUM([Protein]))-WINDOW_MIN(SUM([Protein])))'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column datatype='integer' name='[Calories]' role='measure' type='quantitative' />
            <column datatype='real' name='[Carbohydrates]' role='measure' type='quantitative' />
            <column datatype='string' name='[Cereal]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Fat]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Protein]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Sodium]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Sugars]' role='measure' type='quantitative' />
            <column caption='sodium_new' datatype='real' name='[calculated_carbohydrates (copy)_6024479311606444036]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='(SUM([Sodium])-WINDOW_MIN(SUM([Sodium])))&#10;/&#10;(WINDOW_MAX(SUM([Sodium]))-WINDOW_MIN(SUM([Sodium])))'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='sugar_new' datatype='real' name='[calculated_carbohydrates (copy)_6024479311609675781]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='(SUM([Sugars])-WINDOW_MIN(SUM([Sugars])))&#10;/&#10;(WINDOW_MAX(SUM([Sugars]))-WINDOW_MIN(SUM([Sugars])))'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='fat_new' datatype='real' name='[calculated_sugar (copy)_6024479311610265607]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='(SUM([Fat])-WINDOW_MIN(SUM([Fat])))&#10;/&#10;(WINDOW_MAX(SUM([Fat]))-WINDOW_MIN(SUM([Fat])))'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='carbs_new ' datatype='real' name='[calories_new (copy)_6024479311612362760]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='(SUM([Carbohydrates])-WINDOW_MIN(SUM([Carbohydrates])))&#10;/&#10;(WINDOW_MAX(SUM([Carbohydrates]))-WINDOW_MIN(SUM([Carbohydrates])))'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column-instance column='[Cereal]' derivation='None' name='[none:Cereal:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_6024479311559004161]' derivation='User' name='[usr:Calculation_6024479311559004161:qk:2]' pivot='key' type='quantitative'>
              <table-calc ordering-field='[federated.19r374z0xy5afz10nl73q0ceajzh].[Cereal]' ordering-type='Field' />
            </column-instance>
            <column-instance column='[Calculation_6024479311559880706]' derivation='User' name='[usr:Calculation_6024479311559880706:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Columns' />
            </column-instance>
            <column-instance column='[calculated_carbohydrates (copy)_6024479311606444036]' derivation='User' name='[usr:calculated_carbohydrates (copy)_6024479311606444036:qk:1]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Columns' />
            </column-instance>
            <column-instance column='[calculated_carbohydrates (copy)_6024479311609675781]' derivation='User' name='[usr:calculated_carbohydrates (copy)_6024479311609675781:qk:1]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Columns' />
            </column-instance>
            <column-instance column='[calculated_sugar (copy)_6024479311610265607]' derivation='User' name='[usr:calculated_sugar (copy)_6024479311610265607:qk:1]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Columns' />
            </column-instance>
            <column-instance column='[calories_new (copy)_6024479311612362760]' derivation='User' name='[usr:calories_new (copy)_6024479311612362760:qk:1]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Columns' />
            </column-instance>
          </datasource-dependencies>
          <filter class='categorical' column='[federated.19r374z0xy5afz10nl73q0ceajzh].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.19r374z0xy5afz10nl73q0ceajzh].[usr:Calculation_6024479311559004161:qk:2]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.19r374z0xy5afz10nl73q0ceajzh].[usr:calories_new (copy)_6024479311612362760:qk:1]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.19r374z0xy5afz10nl73q0ceajzh].[usr:calculated_sugar (copy)_6024479311610265607:qk:1]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.19r374z0xy5afz10nl73q0ceajzh].[usr:Calculation_6024479311559880706:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.19r374z0xy5afz10nl73q0ceajzh].[usr:calculated_carbohydrates (copy)_6024479311606444036:qk:1]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.19r374z0xy5afz10nl73q0ceajzh].[usr:calculated_carbohydrates (copy)_6024479311609675781:qk:1]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.19r374z0xy5afz10nl73q0ceajzh].[none:Cereal:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;All-Bran with Extra Fiber&quot;</bucket>
              <bucket>&quot;Puffed Rice&quot;</bucket>
              <bucket>&quot;Puffed Wheat&quot;</bucket>
              <bucket>&quot;100\% Bran&quot;</bucket>
              <bucket>&quot;All-Bran&quot;</bucket>
              <bucket>&quot;Shredded Wheat&quot;</bucket>
              <bucket>&quot;Bran Chex&quot;</bucket>
              <bucket>&quot;Bran Flakes&quot;</bucket>
              <bucket>&quot;Nutri-grain Wheat&quot;</bucket>
              <bucket>&quot;Raisin Squares&quot;</bucket>
              <bucket>&quot;Shredded Wheat &apos;n&apos;Bran&quot;</bucket>
              <bucket>&quot;Shredded Wheat spoon size&quot;</bucket>
              <bucket>&quot;Strawberry Fruit Wheats&quot;</bucket>
              <bucket>&quot;Corn Flakes&quot;</bucket>
              <bucket>&quot;Cream of Wheat (Quick)&quot;</bucket>
              <bucket>&quot;Crispy Wheat &amp; Raisins&quot;</bucket>
              <bucket>&quot;Double Chex&quot;</bucket>
              <bucket>&quot;Frosted Mini-Wheats&quot;</bucket>
              <bucket>&quot;Golden Crisp&quot;</bucket>
              <bucket>&quot;Grape Nuts Flakes&quot;</bucket>
              <bucket>&quot;Life&quot;</bucket>
              <bucket>&quot;Maypo&quot;</bucket>
              <bucket>&quot;Multi-Grain Cheerios&quot;</bucket>
              <bucket>&quot;Product 19&quot;</bucket>
              <bucket>&quot;Quaker Oat Squares&quot;</bucket>
              <bucket>&quot;Quaker Oatmeal&quot;</bucket>
              <bucket>&quot;Raisin Nut Bran&quot;</bucket>
              <bucket>&quot;Total Whole Grain&quot;</bucket>
              <bucket>&quot;Wheat Chex&quot;</bucket>
              <bucket>&quot;Wheaties&quot;</bucket>
              <bucket>&quot;Almond Delight&quot;</bucket>
              <bucket>&quot;Apple Cinnamon Cheerios&quot;</bucket>
              <bucket>&quot;Apple Jacks&quot;</bucket>
              <bucket>&quot;Cheerios&quot;</bucket>
              <bucket>&quot;Clusters&quot;</bucket>
              <bucket>&quot;Cocoa Puffs&quot;</bucket>
              <bucket>&quot;Corn Chex&quot;</bucket>
              <bucket>&quot;Corn Pops&quot;</bucket>
              <bucket>&quot;Count Chocula&quot;</bucket>
              <bucket>&quot;Cracklin&apos; Oat Bran&quot;</bucket>
              <bucket>&quot;Crispix&quot;</bucket>
              <bucket>&quot;Froot Loops&quot;</bucket>
              <bucket>&quot;Frosted Flakes&quot;</bucket>
              <bucket>&quot;Fruity Pebbles&quot;</bucket>
              <bucket>&quot;Golden Grahams&quot;</bucket>
              <bucket>&quot;Grape-Nuts&quot;</bucket>
              <bucket>&quot;Honey Nut Cheerios&quot;</bucket>
              <bucket>&quot;Honey-comb&quot;</bucket>
              <bucket>&quot;Just Right Crunchy  Nuggets&quot;</bucket>
              <bucket>&quot;Kix&quot;</bucket>
              <bucket>&quot;Lucky Charms&quot;</bucket>
              <bucket>&quot;Rice Chex&quot;</bucket>
              <bucket>&quot;Rice Krispies&quot;</bucket>
              <bucket>&quot;Smacks&quot;</bucket>
              <bucket>&quot;Special K&quot;</bucket>
              <bucket>&quot;Total Corn Flakes&quot;</bucket>
              <bucket>&quot;Triples&quot;</bucket>
              <bucket>&quot;Trix&quot;</bucket>
              <bucket>&quot;Wheaties Honey Gold&quot;</bucket>
              <bucket>&quot;100\% Natural Bran&quot;</bucket>
              <bucket>&quot;Cap&apos;n&apos;Crunch&quot;</bucket>
              <bucket>&quot;Cinnamon Toast Crunch&quot;</bucket>
              <bucket>&quot;Fruit &amp; Fibre Dates, Walnuts, and Oats&quot;</bucket>
              <bucket>&quot;Fruitful Bran&quot;</bucket>
              <bucket>&quot;Great Grains Pecan&quot;</bucket>
              <bucket>&quot;Honey Graham Ohs&quot;</bucket>
              <bucket>&quot;Nut&amp;Honey Crunch&quot;</bucket>
              <bucket>&quot;Post Nat. Raisin Bran&quot;</bucket>
              <bucket>&quot;Raisin Bran&quot;</bucket>
              <bucket>&quot;Basic 4&quot;</bucket>
              <bucket>&quot;Oatmeal Raisin Crisp&quot;</bucket>
              <bucket>&quot;Just Right Fruit &amp; Nut&quot;</bucket>
              <bucket>&quot;Nutri-Grain Almond-Raisin&quot;</bucket>
              <bucket>&quot;Total Raisin Bran&quot;</bucket>
              <bucket>&quot;Muesli Raisins, Dates, &amp; Almonds&quot;</bucket>
              <bucket>&quot;Muesli Raisins, Peaches, &amp; Pecans&quot;</bucket>
              <bucket>&quot;Mueslix Crispy Blend&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </manual-sort>
          <slices>
            <column>[federated.19r374z0xy5afz10nl73q0ceajzh].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='header'>
            <format attr='width' field='[federated.19r374z0xy5afz10nl73q0ceajzh].[none:Cereal:nk]' value='80' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.19r374z0xy5afz10nl73q0ceajzh].[Multiple Values]' palette='orange_10_0' type='interpolated' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.19r374z0xy5afz10nl73q0ceajzh].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.19r374z0xy5afz10nl73q0ceajzh].[none:Cereal:nk]</rows>
        <cols>[federated.19r374z0xy5afz10nl73q0ceajzh].[:Measure Names]</cols>
      </table>
      <simple-id uuid='{7988DADA-BE53-439D-B3D8-2C6C087F20EB}' />
    </worksheet>
    <worksheet name='Sheet 2'>
      <table>
        <view>
          <datasources />
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{77D12275-1702-4E28-B1AE-B354C0B806C6}' />
    </worksheet>
  </worksheets>
  <windows source-height='30'>
    <window class='worksheet' maximized='true' name='Sheet 1'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='100'>
            <card pane-specification-id='0' param='[federated.19r374z0xy5afz10nl73q0ceajzh].[Multiple Values]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.19r374z0xy5afz10nl73q0ceajzh].[:Measure Names]</field>
            <field>[federated.19r374z0xy5afz10nl73q0ceajzh].[Multiple Values]</field>
            <field>[federated.19r374z0xy5afz10nl73q0ceajzh].[none:Cereal:nk]</field>
            <field>[federated.19r374z0xy5afz10nl73q0ceajzh].[sum:Fiber:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{E4C8E0F2-50B2-4E92-AE98-DB02A77E403C}' />
    </window>
    <window class='worksheet' name='Sheet 2'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{22A0579B-A9E3-4D0E-B3B1-5800579BD3BE}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='384' name='Sheet 1' width='384'>
      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
      duKCIAgD3f8D+w3MphROeM0AAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='384' name='Sheet 2' width='384'>
      iVBORw0KGgoAAAANSUhEUgAAAYAAAAGACAYAAACkx7W/AAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAFXUlEQVR4nO3VMQEAIAzAMMC/5yFjRxMF/XpnZg4AOW87AIAdBgAQZQAAUQYAEGUAAFEG
      ABBlAABRBgAQZQAAUQYAEGUAAFEGABBlAABRBgAQZQAAUQYAEGUAAFEGABBlAABRBgAQZQAA
      UQYAEGUAAFEGABBlAABRBgAQZQAAUQYAEGUAAFEGABBlAABRBgAQZQAAUQYAEGUAAFEGABBl
      AABRBgAQZQAAUQYAEGUAAFEGABBlAABRBgAQZQAAUQYAEGUAAFEGABBlAABRBgAQZQAAUQYA
      EGUAAFEGABBlAABRBgAQZQAAUQYAEGUAAFEGABBlAABRBgAQZQAAUQYAEGUAAFEGABBlAABR
      BgAQZQAAUQYAEGUAAFEGABBlAABRBgAQZQAAUQYAEGUAAFEGABBlAABRBgAQZQAAUQYAEGUA
      AFEGABBlAABRBgAQZQAAUQYAEGUAAFEGABBlAABRBgAQZQAAUQYAEGUAAFEGABBlAABRBgAQ
      ZQAAUQYAEGUAAFEGABBlAABRBgAQZQAAUQYAEGUAAFEGABBlAABRBgAQZQAAUQYAEGUAAFEG
      ABBlAABRBgAQZQAAUQYAEGUAAFEGABBlAABRBgAQZQAAUQYAEGUAAFEGABBlAABRBgAQZQAA
      UQYAEGUAAFEGABBlAABRBgAQZQAAUQYAEGUAAFEGABBlAABRBgAQZQAAUQYAEGUAAFEGABBl
      AABRBgAQZQAAUQYAEGUAAFEGABBlAABRBgAQZQAAUQYAEGUAAFEGABBlAABRBgAQZQAAUQYA
      EGUAAFEGABBlAABRBgAQZQAAUQYAEGUAAFEGABBlAABRBgAQZQAAUQYAEGUAAFEGABBlAABR
      BgAQZQAAUQYAEGUAAFEGABBlAABRBgAQZQAAUQYAEGUAAFEGABBlAABRBgAQZQAAUQYAEGUA
      AFEGABBlAABRBgAQZQAAUQYAEGUAAFEGABBlAABRBgAQZQAAUQYAEGUAAFEGABBlAABRBgAQ
      ZQAAUQYAEGUAAFEGABBlAABRBgAQZQAAUQYAEGUAAFEGABBlAABRBgAQZQAAUQYAEGUAAFEG
      ABBlAABRBgAQZQAAUQYAEGUAAFEGABBlAABRBgAQZQAAUQYAEGUAAFEGABBlAABRBgAQZQAA
      UQYAEGUAAFEGABBlAABRBgAQZQAAUQYAEGUAAFEGABBlAABRBgAQZQAAUQYAEGUAAFEGABBl
      AABRBgAQZQAAUQYAEGUAAFEGABBlAABRBgAQZQAAUQYAEGUAAFEGABBlAABRBgAQZQAAUQYA
      EGUAAFEGABBlAABRBgAQZQAAUQYAEGUAAFEGABBlAABRBgAQZQAAUQYAEGUAAFEGABBlAABR
      BgAQZQAAUQYAEGUAAFEGABBlAABRBgAQZQAAUQYAEGUAAFEGABBlAABRBgAQZQAAUQYAEGUA
      AFEGABBlAABRBgAQZQAAUQYAEGUAAFEGABBlAABRBgAQZQAAUQYAEGUAAFEGABBlAABRBgAQ
      ZQAAUQYAEGUAAFEGABBlAABRBgAQZQAAUQYAEGUAAFEGABBlAABRBgAQZQAAUQYAEGUAAFEG
      ABBlAABRBgAQZQAAUQYAEGUAAFEGABBlAABRBgAQZQAAUQYAEGUAAFEGABBlAABRBgAQZQAA
      UQYAEGUAAFEGABBlAABRBgAQZQAAUQYAEGUAAFEGABBlAABRBgAQZQAAUQYAEGUAAFEGABBl
      AABRBgAQZQAAUQYAEGUAAFEGABBlAABRBgAQZQAAUQYAEGUAAFEGABBlAABRBgAQZQAAUQYA
      EGUAAFEGABBlAABRBgAQZQAAUQYAEGUAAFEfFxoG/IiMv0YAAAAASUVORK5CYII=
    </thumbnail>
  </thumbnails>
</workbook>
